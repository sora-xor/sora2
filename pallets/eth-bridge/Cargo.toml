[package]
name = "eth-bridge"
version = "0.2.0"
edition = "2021"
authors = ['Polka Biome Ltd. <jihoon@tutanota.de>']
license = "BSD-4-Clause"
homepage = 'https://sora.org'
repository = 'https://github.com/sora-xor/sora2-network'

[dependencies]
codec = { package = "parity-scale-codec", version = "3", default-features = false, features = [
    "derive",
    "full",
] }
log = { workspace = true }
scale-info = { workspace = true, default-features = false, features = ["derive"] }
frame-support = { workspace = true, default-features = false }
frame-system = { workspace = true, default-features = false }
frame-benchmarking = { workspace = true, default-features = false, optional = true }
hex-literal = { workspace = true }
secp256k1 = { version = "0.7", features = [
    'hmac',
], default-features = false, package = "libsecp256k1" }
once_cell = { version = "1.5.2", default-features = false, features = [
    'alloc',
    'unstable',
] }
rustc-hex = { workspace = true, default-features = false }
serde = { version = "1.0", features = [
    "alloc",
    "derive",
], default-features = false }
serde_json = { workspace = true, default-features = false, features = ["alloc"] }
sp-core = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
pallet-scheduler = { workspace = true, default-features = false }

bridge-multisig = { workspace = true, default-features = false }
ethabi = { workspace = true, default-features = false }
ethabi-derive = { workspace = true, default-features = false }
ethereum-types = { version = "0.14.0", default-features = false, features = [
    'serialize',
    'codec',
] }
jsonrpc-core = { workspace = true, default-features = false }

assets = { path = "../assets", default-features = false }
common = { path = "../../common", default-features = false }
permissions = { path = "../permissions", default-features = false }
bridge-types = { workspace = true, default-features = false }

[dev-dependencies]
async-std = { workspace = true, features = ["attributes", "unstable"] }
currencies = { workspace = true, default-features = false }
env_logger = { workspace = true }
frame-executive = { workspace = true, default-features = false }
orml-traits = { workspace = true, default-features = false }
pallet-balances = { workspace = true }
pallet-sudo = { workspace = true }
parity-util-mem = { version = "0.12.0", default-features = false, features = [
    "primitive-types",
] }
parking_lot = { workspace = true }
sp-core = { workspace = true, default-features = false, features = [
    "full_crypto",
] }
sp-keystore = { workspace = true, default-features = false }
tokens = { workspace = true }
tokio = { workspace = true, default-features = false, features = ["macros"] }

assets = { path = "../assets" }
common = { path = "../../common", features = ["test"] }
permissions = { path = "../permissions" }

[features]
default = ['std']
std = [
    'bridge-multisig/std',
    'codec/std',
    "scale-info/std",
    'ethereum-types/std',
    'frame-support/std',
    'frame-system/std',
    'jsonrpc-core/std',
    'secp256k1/std',
    'rustc-hex/std',
    'serde_json/std',
    'serde/std',
    'sp-core/std',
    'sp-io/std',
    'sp-std/std',
    'sp-runtime/std',
    'pallet-scheduler/std',
    'common/std',
    'bridge-types/std',
]
runtime-benchmarks = [
    "frame-benchmarking",
    "frame-system/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
]

try-runtime = ["frame-support/try-runtime"]
