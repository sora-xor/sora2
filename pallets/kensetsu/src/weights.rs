// This file is part of the SORA network and Polkaswap app.

// Copyright (c) 2020, 2021, Polka Biome Ltd. All rights reserved.
// SPDX-License-Identifier: BSD-4-Clause

// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:

// Redistributions of source code must retain the above copyright notice, this list
// of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice, this
// list of conditions and the following disclaimer in the documentation and/or other
// materials provided with the distribution.
//
// All advertising materials mentioning features or use of this software must display
// the following acknowledgement: This product includes software developed by Polka Biome
// Ltd., SORA, and Polkaswap.
//
// Neither the name of the Polka Biome Ltd. nor the names of its contributors may be used
// to endorse or promote products derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY Polka Biome Ltd. AS IS AND ANY EXPRESS OR IMPLIED WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Polka Biome Ltd. BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
// OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//! Autogenerated weights for kensetsu
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-08-23, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `86dc1868ffd1`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("local"), DB CACHE: 1024

// Executed Command:
// /usr/local/bin/framenode
// benchmark
// pallet
// --chain=local
// --steps=50
// --repeat=20
// --pallet=kensetsu
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --header=./misc/file_header.txt
// --template=./misc/pallet-weight-template.hbs
// --output=./pallets/kensetsu/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for kensetsu.
pub trait WeightInfo {
	fn create_cdp() -> Weight;
	fn close_cdp() -> Weight;
	fn deposit_collateral() -> Weight;
	fn borrow() -> Weight;
	fn repay_debt() -> Weight;
	fn liquidate() -> Weight;
	fn accrue() -> Weight;
	fn update_collateral_risk_parameters() -> Weight;
	fn update_borrow_tax() -> Weight;
	fn update_liquidation_penalty() -> Weight;
	fn withdraw_profit() -> Weight;
	fn donate() -> Weight;
	fn register_stablecoin() -> Weight;
	fn update_hard_cap() -> Weight;
	fn update_liquidation_ratio() -> Weight;
	fn update_max_liquidation_lot() -> Weight;
	fn update_stability_fee_rate() -> Weight;
	fn update_minimal_collateral_deposit() -> Weight;
}

/// Weights for kensetsu using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Kensetsu NextCDPId (r:1 w:1)
	/// Proof: Kensetsu NextCDPId (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Kensetsu CdpOwnerIndex (r:1 w:1)
	/// Proof: Kensetsu CdpOwnerIndex (max_values: None, max_size: Some(160034), added: 162509, mode: MaxEncodedLen)
	/// Storage: Technical TechAccounts (r:2 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:2 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:2 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: PriceTools PriceInfos (r:1 w:0)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu BorrowTax (r:1 w:0)
	/// Proof: Kensetsu BorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Kensetsu CDPDepository (r:0 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	fn create_cdp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6431`
		//  Estimated: `878117`
		// Minimum execution time: 236_067_000 picoseconds.
		Weight::from_parts(239_041_000, 878117)
			.saturating_add(T::DbWeight::get().reads(19_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:2 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:2 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:2 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Kensetsu CdpOwnerIndex (r:1 w:1)
	/// Proof: Kensetsu CdpOwnerIndex (max_values: None, max_size: Some(160034), added: 162509, mode: MaxEncodedLen)
	fn close_cdp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2941`
		//  Estimated: `846531`
		// Minimum execution time: 155_000_000 picoseconds.
		Weight::from_parts(159_209_000, 846531)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn deposit_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2577`
		//  Estimated: `345174`
		// Minimum execution time: 94_704_000 picoseconds.
		Weight::from_parts(95_985_000, 345174)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: PriceTools PriceInfos (r:1 w:0)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu BorrowTax (r:1 w:0)
	/// Proof: Kensetsu BorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5995`
		//  Estimated: `380830`
		// Minimum execution time: 157_218_000 picoseconds.
		Weight::from_parts(159_594_000, 380830)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn repay_debt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3588`
		//  Estimated: `362236`
		// Minimum execution time: 158_088_000 picoseconds.
		Weight::from_parts(160_086_000, 362236)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Kensetsu LiquidatedThisBlock (r:1 w:1)
	/// Proof: Kensetsu LiquidatedThisBlock (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:1)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:3 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:2 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:2 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: PriceTools PriceInfos (r:2 w:1)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: DEXManager DEXInfos (r:1 w:0)
	/// Proof Skipped: DEXManager DEXInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: XSTPool EnabledSynthetics (r:2 w:0)
	/// Proof Skipped: XSTPool EnabledSynthetics (max_values: None, max_size: None, mode: Measured)
	/// Storage: DEXAPI EnabledSourceTypes (r:1 w:0)
	/// Proof Skipped: DEXAPI EnabledSourceTypes (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: PoolXYK Properties (r:1 w:0)
	/// Proof Skipped: PoolXYK Properties (max_values: None, max_size: None, mode: Measured)
	/// Storage: MulticollateralBondingCurvePool EnabledTargets (r:1 w:0)
	/// Proof Skipped: MulticollateralBondingCurvePool EnabledTargets (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: OrderBook OrderBooks (r:1 w:0)
	/// Proof: OrderBook OrderBooks (max_values: None, max_size: Some(238), added: 2713, mode: MaxEncodedLen)
	/// Storage: TradingPair LockedLiquiditySources (r:1 w:0)
	/// Proof Skipped: TradingPair LockedLiquiditySources (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:4 w:4)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Kensetsu LiquidationPenalty (r:1 w:0)
	/// Proof: Kensetsu LiquidationPenalty (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Assets AssetOwners (r:1 w:0)
	/// Proof Skipped: Assets AssetOwners (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: PoolXYK Reserves (r:0 w:1)
	/// Proof Skipped: PoolXYK Reserves (max_values: None, max_size: None, mode: Measured)
	fn liquidate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `8905`
		//  Estimated: `831178`
		// Minimum execution time: 548_432_000 picoseconds.
		Weight::from_parts(566_248_000, 831178)
			.saturating_add(T::DbWeight::get().reads(33_u64))
			.saturating_add(T::DbWeight::get().writes(13_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn accrue() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3597`
		//  Estimated: `364875`
		// Minimum execution time: 131_887_000 picoseconds.
		Weight::from_parts(134_294_000, 364875)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: PriceTools PriceInfos (r:1 w:0)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetOwners (r:1 w:0)
	/// Proof Skipped: Assets AssetOwners (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	fn update_collateral_risk_parameters() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1475`
		//  Estimated: `15016`
		// Minimum execution time: 45_310_000 picoseconds.
		Weight::from_parts(46_330_000, 15016)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu BorrowTax (r:1 w:1)
	/// Proof: Kensetsu BorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Kensetsu KarmaBorrowTax (r:1 w:1)
	/// Proof: Kensetsu KarmaBorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Kensetsu TbcdBorrowTax (r:1 w:1)
	/// Proof: Kensetsu TbcdBorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn update_borrow_tax() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `185`
		//  Estimated: `1488`
		// Minimum execution time: 19_721_000 picoseconds.
		Weight::from_parts(20_127_000, 1488)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Kensetsu LiquidationPenalty (r:1 w:1)
	/// Proof: Kensetsu LiquidationPenalty (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn update_liquidation_penalty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `185`
		//  Estimated: `496`
		// Minimum execution time: 14_793_000 picoseconds.
		Weight::from_parts(15_155_000, 496)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_profit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2394`
		//  Estimated: `349601`
		// Minimum execution time: 94_403_000 picoseconds.
		Weight::from_parts(95_994_000, 349601)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:1)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn donate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2878`
		//  Estimated: `353584`
		// Minimum execution time: 119_725_000 picoseconds.
		Weight::from_parts(122_149_000, 353584)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Assets AssetInfosV2 (r:1 w:1)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetOwners (r:3 w:1)
	/// Proof Skipped: Assets AssetOwners (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Permissions Owners (r:2 w:2)
	/// Proof Skipped: Permissions Owners (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:3 w:1)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:1)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: DEXManager DEXInfos (r:1 w:0)
	/// Proof Skipped: DEXManager DEXInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: TradingPair EnabledSources (r:1 w:1)
	/// Proof Skipped: TradingPair EnabledSources (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfos (r:0 w:1)
	/// Proof Skipped: Assets AssetInfos (max_values: None, max_size: None, mode: Measured)
	fn register_stablecoin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3466`
		//  Estimated: `60031`
		// Minimum execution time: 178_162_000 picoseconds.
		Weight::from_parts(182_110_000, 60031)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_hard_cap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_424_000 picoseconds.
		Weight::from_parts(20_006_000, 2663)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_liquidation_ratio() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_226_000 picoseconds.
		Weight::from_parts(20_036_000, 2663)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_max_liquidation_lot() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_602_000 picoseconds.
		Weight::from_parts(19_940_000, 2663)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	fn update_stability_fee_rate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `471`
		//  Estimated: `3166`
		// Minimum execution time: 24_371_000 picoseconds.
		Weight::from_parts(25_225_000, 3166)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_minimal_collateral_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_132_000 picoseconds.
		Weight::from_parts(19_749_000, 2663)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Kensetsu NextCDPId (r:1 w:1)
	/// Proof: Kensetsu NextCDPId (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Kensetsu CdpOwnerIndex (r:1 w:1)
	/// Proof: Kensetsu CdpOwnerIndex (max_values: None, max_size: Some(160034), added: 162509, mode: MaxEncodedLen)
	/// Storage: Technical TechAccounts (r:2 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:2 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:2 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: PriceTools PriceInfos (r:1 w:0)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu BorrowTax (r:1 w:0)
	/// Proof: Kensetsu BorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Kensetsu CDPDepository (r:0 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	fn create_cdp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6431`
		//  Estimated: `878117`
		// Minimum execution time: 236_067_000 picoseconds.
		Weight::from_parts(239_041_000, 878117)
			.saturating_add(RocksDbWeight::get().reads(19_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:2 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:2 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:2 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Kensetsu CdpOwnerIndex (r:1 w:1)
	/// Proof: Kensetsu CdpOwnerIndex (max_values: None, max_size: Some(160034), added: 162509, mode: MaxEncodedLen)
	fn close_cdp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2941`
		//  Estimated: `846531`
		// Minimum execution time: 155_000_000 picoseconds.
		Weight::from_parts(159_209_000, 846531)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn deposit_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2577`
		//  Estimated: `345174`
		// Minimum execution time: 94_704_000 picoseconds.
		Weight::from_parts(95_985_000, 345174)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: PriceTools PriceInfos (r:1 w:0)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu BorrowTax (r:1 w:0)
	/// Proof: Kensetsu BorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5995`
		//  Estimated: `380830`
		// Minimum execution time: 157_218_000 picoseconds.
		Weight::from_parts(159_594_000, 380830)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn repay_debt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3588`
		//  Estimated: `362236`
		// Minimum execution time: 158_088_000 picoseconds.
		Weight::from_parts(160_086_000, 362236)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Kensetsu LiquidatedThisBlock (r:1 w:1)
	/// Proof: Kensetsu LiquidatedThisBlock (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:1)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:3 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:2 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:2 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: PriceTools PriceInfos (r:2 w:1)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: DEXManager DEXInfos (r:1 w:0)
	/// Proof Skipped: DEXManager DEXInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: XSTPool EnabledSynthetics (r:2 w:0)
	/// Proof Skipped: XSTPool EnabledSynthetics (max_values: None, max_size: None, mode: Measured)
	/// Storage: DEXAPI EnabledSourceTypes (r:1 w:0)
	/// Proof Skipped: DEXAPI EnabledSourceTypes (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: PoolXYK Properties (r:1 w:0)
	/// Proof Skipped: PoolXYK Properties (max_values: None, max_size: None, mode: Measured)
	/// Storage: MulticollateralBondingCurvePool EnabledTargets (r:1 w:0)
	/// Proof Skipped: MulticollateralBondingCurvePool EnabledTargets (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: OrderBook OrderBooks (r:1 w:0)
	/// Proof: OrderBook OrderBooks (max_values: None, max_size: Some(238), added: 2713, mode: MaxEncodedLen)
	/// Storage: TradingPair LockedLiquiditySources (r:1 w:0)
	/// Proof Skipped: TradingPair LockedLiquiditySources (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:4 w:4)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Kensetsu LiquidationPenalty (r:1 w:0)
	/// Proof: Kensetsu LiquidationPenalty (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Assets AssetOwners (r:1 w:0)
	/// Proof Skipped: Assets AssetOwners (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: PoolXYK Reserves (r:0 w:1)
	/// Proof Skipped: PoolXYK Reserves (max_values: None, max_size: None, mode: Measured)
	fn liquidate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `8905`
		//  Estimated: `831178`
		// Minimum execution time: 548_432_000 picoseconds.
		Weight::from_parts(566_248_000, 831178)
			.saturating_add(RocksDbWeight::get().reads(33_u64))
			.saturating_add(RocksDbWeight::get().writes(13_u64))
	}
	/// Storage: Kensetsu CDPDepository (r:1 w:1)
	/// Proof: Kensetsu CDPDepository (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:2 w:0)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn accrue() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3597`
		//  Estimated: `364875`
		// Minimum execution time: 131_887_000 picoseconds.
		Weight::from_parts(134_294_000, 364875)
			.saturating_add(RocksDbWeight::get().reads(12_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: PriceTools PriceInfos (r:1 w:0)
	/// Proof Skipped: PriceTools PriceInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetOwners (r:1 w:0)
	/// Proof Skipped: Assets AssetOwners (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	fn update_collateral_risk_parameters() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1475`
		//  Estimated: `15016`
		// Minimum execution time: 45_310_000 picoseconds.
		Weight::from_parts(46_330_000, 15016)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu BorrowTax (r:1 w:1)
	/// Proof: Kensetsu BorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Kensetsu KarmaBorrowTax (r:1 w:1)
	/// Proof: Kensetsu KarmaBorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Kensetsu TbcdBorrowTax (r:1 w:1)
	/// Proof: Kensetsu TbcdBorrowTax (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn update_borrow_tax() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `185`
		//  Estimated: `1488`
		// Minimum execution time: 19_721_000 picoseconds.
		Weight::from_parts(20_127_000, 1488)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Kensetsu LiquidationPenalty (r:1 w:1)
	/// Proof: Kensetsu LiquidationPenalty (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn update_liquidation_penalty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `185`
		//  Estimated: `496`
		// Minimum execution time: 14_793_000 picoseconds.
		Weight::from_parts(15_155_000, 496)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu StablecoinInfos (r:1 w:0)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_profit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2394`
		//  Estimated: `349601`
		// Minimum execution time: 94_403_000 picoseconds.
		Weight::from_parts(95_994_000, 349601)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Technical TechAccounts (r:1 w:0)
	/// Proof Skipped: Technical TechAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: ExtendedAssets SoulboundAsset (r:1 w:0)
	/// Proof: ExtendedAssets SoulboundAsset (max_values: None, max_size: Some(322091), added: 324566, mode: MaxEncodedLen)
	/// Storage: Assets AssetInfosV2 (r:1 w:0)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:1)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn donate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2878`
		//  Estimated: `353584`
		// Minimum execution time: 119_725_000 picoseconds.
		Weight::from_parts(122_149_000, 353584)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Assets AssetInfosV2 (r:1 w:1)
	/// Proof Skipped: Assets AssetInfosV2 (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetOwners (r:3 w:1)
	/// Proof Skipped: Assets AssetOwners (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Permissions Owners (r:2 w:2)
	/// Proof Skipped: Permissions Owners (max_values: None, max_size: None, mode: Measured)
	/// Storage: Permissions Permissions (r:3 w:1)
	/// Proof Skipped: Permissions Permissions (max_values: None, max_size: None, mode: Measured)
	/// Storage: Kensetsu StablecoinInfos (r:1 w:1)
	/// Proof Skipped: Kensetsu StablecoinInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: DEXManager DEXInfos (r:1 w:0)
	/// Proof Skipped: DEXManager DEXInfos (max_values: None, max_size: None, mode: Measured)
	/// Storage: TradingPair EnabledSources (r:1 w:1)
	/// Proof Skipped: TradingPair EnabledSources (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets AssetInfos (r:0 w:1)
	/// Proof Skipped: Assets AssetInfos (max_values: None, max_size: None, mode: Measured)
	fn register_stablecoin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3466`
		//  Estimated: `60031`
		// Minimum execution time: 178_162_000 picoseconds.
		Weight::from_parts(182_110_000, 60031)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_hard_cap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_424_000 picoseconds.
		Weight::from_parts(20_006_000, 2663)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_liquidation_ratio() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_226_000 picoseconds.
		Weight::from_parts(20_036_000, 2663)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_max_liquidation_lot() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_602_000 picoseconds.
		Weight::from_parts(19_940_000, 2663)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	fn update_stability_fee_rate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `471`
		//  Estimated: `3166`
		// Minimum execution time: 24_371_000 picoseconds.
		Weight::from_parts(25_225_000, 3166)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Kensetsu CollateralInfos (r:1 w:1)
	/// Proof: Kensetsu CollateralInfos (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn update_minimal_collateral_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `2663`
		// Minimum execution time: 19_132_000 picoseconds.
		Weight::from_parts(19_749_000, 2663)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
