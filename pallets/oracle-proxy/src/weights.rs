
//! Autogenerated weights for `oracle_proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-11-29, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `MacBook-Pro-Nikita.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// target/release/framenode
// benchmark
// pallet
// --chain
// dev
// --steps
// 20
// --repeat
// 10
// --pallet
// oracle-proxy
// --extrinsic
// *
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/oracle-proxy/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;
use common::weights::constants::EXTRINSIC_FIXED_WEIGHT;

/// Weight functions for `oracle_proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::WeightInfo for WeightInfo<T> {
	// Storage: OracleProxy EnabledOracles (r:1 w:1)
	fn enable_oracle() -> Weight {
		Weight::zero()
	}
	// Storage: OracleProxy EnabledOracles (r:1 w:1)
	fn disable_oracle() -> Weight {
		Weight::zero()
	}
}

impl crate::WeightInfo for () {
	fn enable_oracle() -> Weight {
		EXTRINSIC_FIXED_WEIGHT
	}

	fn disable_oracle() -> Weight {
		EXTRINSIC_FIXED_WEIGHT
	}
}
