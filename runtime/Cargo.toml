[package]
edition = "2021"
authors = ["Polka Biome Ltd. <jihoon@tutanota.de>"]
license = "BSD-4-Clause"
homepage = "https://sora.org"
repository = "https://github.com/sora-xor/sora2-network"
name = "framenode-runtime"
version = "3.6.1"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true, default-features = false }

[dependencies]
codec = { package = "parity-scale-codec", version = "3", default-features = false, features = [
    "derive",
    "chain-error",
] }
# Does not compile with newer version
parity-scale-codec-derive = "3"
scale-info = { workspace = true, default-features = false, features = ["derive"] }
hex-literal = { workspace = true }
log = { workspace = true }
serde = { features = [
    'derive',
], default-features = false, optional = true, version = '1.0.101' }

# bridge-multisig = { git = "https://github.com/soramitsu/sora2-frame-pallets.git", branch = "polkadot-v1.1.0", package = "pallet-multisig", default-features = false }
bridge-multisig = { workspace = true, default-features = false }
sp-beefy = { workspace = true, default-features = false }
sp-mmr-primitives = { workspace = true, default-features = false }
pallet-mmr = { workspace = true, default-features = false, optional = true }
beefy-light-client = { workspace = true, default-features = false, optional = true }
bridge-data-signer = { workspace = true, default-features = false }
multisig-verifier = { workspace = true, default-features = false }
beefy-light-client-runtime-api = { workspace = true, default-features = false, optional = true }

dispatch = { workspace = true, default-features = false }
leaf-provider = { workspace = true, default-features = false }
leaf-provider-runtime-api = { workspace = true, default-features = false }
bridge-proxy = { path = "../pallets/bridge-proxy", default-features = false }
bridge-proxy-runtime-api = { path = "../pallets/bridge-proxy/runtime-api", default-features = false }
parachain-bridge-app = { workspace = true, default-features = false }
substrate-bridge-app = { workspace = true, default-features = false }
substrate-bridge-channel = { workspace = true, default-features = false }
evm-fungible-app = { workspace = true, default-features = false, optional = true }
bridge-channel = { workspace = true, default-features = false, optional = true }
jetton-app = { workspace = true, default-features = false, optional = true }

apollo-platform = { path = "../pallets/apollo-platform", default-features = false }
assets = { path = "../pallets/assets", default-features = false }
assets-runtime-api = { path = "../pallets/assets/runtime-api", default-features = false }
band = { path = "../pallets/band", default-features = false }
common = { path = "../common", default-features = false }
ceres-governance-platform = { path = "../pallets/ceres-governance-platform", default-features = false }
ceres-launchpad = { path = "../pallets/ceres-launchpad", default-features = false }
ceres-liquidity-locker = { path = "../pallets/ceres-liquidity-locker", default-features = false }
ceres-liquidity-locker-benchmarking = { path = "../pallets/ceres-liquidity-locker/benchmarking", default-features = false, optional = true }
ceres-token-locker = { path = "../pallets/ceres-token-locker", default-features = false }
ceres-staking = { path = "../pallets/ceres-staking", default-features = false }
demeter-farming-platform = { path = "../pallets/demeter-farming-platform", default-features = false }
demeter-farming-platform-benchmarking = { path = "../pallets/demeter-farming-platform/benchmarking", default-features = false, optional = true }
dex-api = { path = "../pallets/dex-api", default-features = false }
dex-manager = { path = "../pallets/dex-manager", default-features = false }
dex-manager-runtime-api = { path = "../pallets/dex-manager/runtime-api", default-features = false }
dex-runtime-api = { path = "../pallets/dex-api/runtime-api", default-features = false }
eth-bridge = { path = "../pallets/eth-bridge", default-features = false }
eth-bridge-runtime-api = { path = "../pallets/eth-bridge/runtime-api", default-features = false }
farming = { path = "../pallets/farming", default-features = false }
farming-runtime-api = { path = "../pallets/farming/runtime-api", default-features = false }
faucet = { path = "../pallets/faucet", default-features = false, optional = true }
hermes-governance-platform = { path = "../pallets/hermes-governance-platform", default-features = false }
iroha-migration = { path = "../pallets/iroha-migration", default-features = false }
iroha-migration-runtime-api = { path = "../pallets/iroha-migration/runtime-api", default-features = false }
kensetsu = { path = "../pallets/kensetsu", default-features = false }
kensetsu-benchmarking = { path = "../pallets/kensetsu/benchmarking", default-features = false, optional = true }
liquidity-proxy = { path = "../pallets/liquidity-proxy", default-features = false }
liquidity-proxy-benchmarking = { path = "../pallets/liquidity-proxy/benchmarking", default-features = false, optional = true }
liquidity-proxy-runtime-api = { path = "../pallets/liquidity-proxy/runtime-api", default-features = false }
mock-liquidity-source = { path = "../pallets/mock-liquidity-source", default-features = false }
multicollateral-bonding-curve-pool = { path = "../pallets/multicollateral-bonding-curve-pool", default-features = false }
oracle-proxy = { path = "../pallets/oracle-proxy", default-features = false }
oracle-proxy-runtime-api = { path = "../pallets/oracle-proxy/runtime-api", default-features = false }
order-book = { path = "../pallets/order-book", default-features = false }
order-book-benchmarking = { path = "../pallets/order-book/benchmarking", default-features = false, optional = true }
permissions = { path = "../pallets/permissions", default-features = false }
pool-xyk = { path = "../pallets/pool-xyk", default-features = false }
pool-xyk-benchmarking = { path = "../pallets/pool-xyk/benchmarking", default-features = false, optional = true }
price-tools = { path = "../pallets/price-tools", default-features = false }
pswap-distribution = { path = "../pallets/pswap-distribution", default-features = false }
pswap-distribution-benchmarking = { path = "../pallets/pswap-distribution/benchmarking", default-features = false, optional = true }
pswap-distribution-runtime-api = { path = "../pallets/pswap-distribution/runtime-api", default-features = false }
qa-tools = { path = "../pallets/qa-tools", default-features = false, optional = true }
referrals = { path = "../pallets/referrals", default-features = false }
extended-assets = { path = "../pallets/extended-assets", default-features = false }
rewards = { path = "../pallets/rewards", default-features = false }
rewards-runtime-api = { path = "../pallets/rewards/runtime-api", default-features = false }
soratopia = { path = "../pallets/soratopia", default-features = false, optional = true }
technical = { path = "../pallets/technical", default-features = false }
trading-pair = { path = "../pallets/trading-pair", default-features = false }
trading-pair-runtime-api = { path = "../pallets/trading-pair/runtime-api", default-features = false }
vested-rewards = { path = "../pallets/vested-rewards", default-features = false }
vested-rewards-runtime-api = { path = "../pallets/vested-rewards/runtime-api", default-features = false }
xor-fee = { path = "../pallets/xor-fee", default-features = false }
xst = { path = "../pallets/xst", default-features = false }
xst-benchmarking = { path = "../pallets/xst/benchmarking", default-features = false, optional = true }

# Substrate dependencies
frame-benchmarking = { workspace = true, default-features = false, optional = true }
frame-executive = { workspace = true, default-features = false }
frame-support = { workspace = true, default-features = false, features = [
    "tuples-96",
] }
frame-system = { workspace = true, default-features = false }
frame-system-benchmarking = { workspace = true, default-features = false, optional = true }
frame-system-rpc-runtime-api = { workspace = true, default-features = false }
frame-try-runtime = { workspace = true, default-features = false, optional = true }
pallet-aura = { workspace = true, default-features = false }
pallet-balances = { workspace = true, default-features = false }
pallet-collective = { workspace = true, default-features = false }
pallet-democracy = { workspace = true, default-features = false }
pallet-elections-phragmen = { workspace = true, default-features = false }
pallet-grandpa = { workspace = true, default-features = false }
pallet-beefy = { workspace = true, default-features = false, optional = true }
pallet-beefy-mmr = { workspace = true, default-features = false, optional = true }
pallet-babe = { workspace = true, default-features = false }
pallet-im-online = { workspace = true, default-features = false }
pallet-identity = { workspace = true, default-features = false }
pallet-membership = { workspace = true, default-features = false }
pallet-multisig = { workspace = true, default-features = false }
pallet-offences = { workspace = true, default-features = false }
pallet-preimage = { workspace = true, default-features = false }
pallet-randomness-collective-flip = { workspace = true, default-features = false }
pallet-sudo = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-scheduler = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false, features = ["historical"] }

pallet-staking = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = false }
pallet-utility = { workspace = true, default-features = false }
pallet-bags-list = { workspace = true, default-features = false }

sp-api = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
sp-consensus-babe = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-offchain = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false }
sp-staking = { workspace = true, default-features = false }
sp-npos-elections = { workspace = true, default-features = false }
pallet-authorship = { workspace = true, default-features = false }
pallet-election-provider-multi-phase = { workspace = true, default-features = false }
frame-election-provider-support = { workspace = true, default-features = false }

# Other
currencies = { workspace = true, default-features = false }
static_assertions = { workspace = true }
tokens = { workspace = true, default-features = false }
traits = { workspace = true, default-features = false }
bridge-types = { workspace = true, default-features = false, optional = true }

[dev-dependencies]
env_logger = { workspace = true }
framenode-chain-spec = { path = "../node/chain_spec", features = ["test"] }
tokio = { workspace = true, features = ["macros"] }
sp-tracing = { workspace = true }
frame-remote-externalities = { workspace = true }

[features]
default = ["std", "build-wasm-binary"]

std = [
    "apollo-platform/std",
    "assets-runtime-api/std",
    "assets/std",
    "band/std",
    "bridge-multisig/std",
    "pallet-beefy/std",
    "pallet-mmr/std",
    "pallet-beefy-mmr/std",
    "sp-mmr-primitives/std",
    "sp-beefy/std",
    "beefy-light-client/std",
    "beefy-light-client-runtime-api/std",
    "codec/std",
    "scale-info/std",
    "common/std",
    "ceres-governance-platform/std",
    "ceres-launchpad/std",
    "ceres-liquidity-locker/std",
    "ceres-staking/std",
    "ceres-token-locker/std",
    "demeter-farming-platform/std",
    "dex-api/std",
    "dex-manager-runtime-api/std",
    "dex-manager/std",
    "dex-runtime-api/std",
    "eth-bridge-runtime-api/std",
    "eth-bridge/std",
    "dispatch/std",
    "leaf-provider/std",
    "leaf-provider-runtime-api/std",
    "bridge-proxy/std",
    "bridge-proxy-runtime-api/std",
    "evm-fungible-app/std",
    "jetton-app/std",
    "parachain-bridge-app/std",
    "substrate-bridge-channel/std",
    "bridge-channel/std",
    "bridge-data-signer/std",
    "multisig-verifier/std",
    "bridge-types/std",
    "farming/std",
    "farming-runtime-api/std",
    "faucet/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "frame-try-runtime/std",
    "hermes-governance-platform/std",
    "iroha-migration-runtime-api/std",
    "iroha-migration/std",
    "kensetsu/std",
    "liquidity-proxy-runtime-api/std",
    "liquidity-proxy/std",
    "liquidity-proxy-benchmarking/std",
    "pool-xyk-benchmarking/std",
    "mock-liquidity-source/std",
    "multicollateral-bonding-curve-pool/std",
    "oracle-proxy/std",
    "oracle-proxy-runtime-api/std",
    "order-book/std",
    "order-book-benchmarking/std",
    "pallet-authorship/std",
    "pallet-babe/std",
    "pallet-balances/std",
    "pallet-collective/std",
    "pallet-democracy/std",
    "pallet-elections-phragmen/std",
    "pallet-grandpa/std",
    "pallet-identity/std",
    "pallet-im-online/std",
    "pallet-membership/std",
    "pallet-multisig/std",
    "pallet-offences/std",
    "pallet-preimage/std",
    "pallet-randomness-collective-flip/std",
    "pallet-scheduler/std",
    "pallet-session/std",
    "pallet-staking/std",
    "pallet-sudo/std",
    "pallet-aura/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-utility/std",
    "permissions/std",
    "pool-xyk/std",
    "price-tools/std",
    "pswap-distribution-runtime-api/std",
    "pswap-distribution/std",
    "qa-tools/std",
    "referrals/std",
    "extended-assets/std",
    "rewards-runtime-api/std",
    "rewards/std",
    "serde/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-babe/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-staking/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "sp-npos-elections/std",
    "sp-consensus-aura/std",
    "substrate-bridge-app/std",
    "soratopia/std",
    "technical/std",
    "trading-pair-runtime-api/std",
    "trading-pair/std",
    "vested-rewards/std",
    "vested-rewards-runtime-api/std",
    "xor-fee/std",
    "xst/std",
    "xst-benchmarking/std",
]

private-net = [
    "faucet",
    "farming/private-net",
    "vested-rewards/private-net",
    "framenode-chain-spec/private-net",
    "qa-tools",
]

wip = [
    "framenode-chain-spec/wip",
    "dex-manager/wip",
    "order-book/wip",
    "liquidity-proxy/wip",
    "liquidity-proxy-runtime-api/wip",
    "liquidity-proxy-benchmarking/wip",
    "pallet-mmr",
    "beefy-light-client",
    "beefy-light-client-runtime-api",
    "evm-fungible-app",
    "jetton-app",
    "bridge-channel",
    "pallet-beefy",
    "pallet-beefy-mmr",
    "xor-fee/wip",
    "soratopia",
]

stage = ["framenode-chain-spec/stage"]

runtime-benchmarks = [
    "apollo-platform/runtime-benchmarks",
    "assets/runtime-benchmarks",
    "band/runtime-benchmarks",
    "ceres-governance-platform/runtime-benchmarks",
    "ceres-launchpad/runtime-benchmarks",
    "ceres-liquidity-locker-benchmarking",
    "ceres-liquidity-locker-benchmarking/runtime-benchmarks",
    "common/runtime-benchmarks",
    "demeter-farming-platform-benchmarking",
    "demeter-farming-platform-benchmarking/runtime-benchmarks",
    "dex-api/runtime-benchmarks",
    "ceres-staking/runtime-benchmarks",
    "ceres-token-locker/runtime-benchmarks",
    "eth-bridge/runtime-benchmarks",
    "dispatch/runtime-benchmarks",
    "bridge-types/runtime-benchmarks",
    "bridge-proxy/runtime-benchmarks",
    "evm-fungible-app/runtime-benchmarks",
    "jetton-app/runtime-benchmarks",
    "parachain-bridge-app/runtime-benchmarks",
    "substrate-bridge-app/runtime-benchmarks",
    "substrate-bridge-channel/runtime-benchmarks",
    "bridge-channel/runtime-benchmarks",
    "farming/runtime-benchmarks",
    "faucet/runtime-benchmarks",
    "frame-benchmarking",
    "frame-support/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "hermes-governance-platform/runtime-benchmarks",
    "iroha-migration/runtime-benchmarks",
    "kensetsu-benchmarking",
    "kensetsu-benchmarking/runtime-benchmarks",
    "liquidity-proxy-benchmarking",
    "liquidity-proxy-benchmarking/runtime-benchmarks",
    "oracle-proxy/runtime-benchmarks",
    "order-book-benchmarking",
    "order-book-benchmarking/runtime-benchmarks",
    "order-book/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pool-xyk-benchmarking",
    "pool-xyk-benchmarking/runtime-benchmarks",
    "referrals/runtime-benchmarks",
    "rewards/runtime-benchmarks",
    "soratopia/runtime-benchmarks",
    "technical/runtime-benchmarks",
    "trading-pair/runtime-benchmarks",
    "multicollateral-bonding-curve-pool/runtime-benchmarks",
    "pswap-distribution-benchmarking/runtime-benchmarks",
    "pswap-distribution/runtime-benchmarks",
    "price-tools/runtime-benchmarks",
    "vested-rewards/runtime-benchmarks",
    "xor-fee/runtime-benchmarks",
    "xst-benchmarking",
    "xst-benchmarking/runtime-benchmarks",
    "beefy-light-client/runtime-benchmarks",
    "multisig-verifier/runtime-benchmarks",
    "bridge-data-signer/runtime-benchmarks",
    "extended-assets/runtime-benchmarks",
]

reduced-pswap-reward-periods = []

build-wasm-binary = []

try-runtime = [
    "frame-try-runtime",
    "frame-try-runtime/try-runtime",
    "apollo-platform/try-runtime",
    "assets/try-runtime",
    "band/try-runtime",
    "bridge-multisig/try-runtime",
    "pallet-beefy/try-runtime",
    "beefy-light-client/try-runtime",
    "ceres-governance-platform/try-runtime",
    "ceres-launchpad/try-runtime",
    "ceres-liquidity-locker/try-runtime",
    "ceres-staking/try-runtime",
    "ceres-token-locker/try-runtime",
    "demeter-farming-platform/try-runtime",
    "hermes-governance-platform/try-runtime",
    "dex-api/try-runtime",
    "dex-manager/try-runtime",
    "eth-bridge/try-runtime",
    "dispatch/try-runtime",
    "leaf-provider/try-runtime",
    "bridge-proxy/try-runtime",
    "evm-fungible-app/try-runtime",
    "jetton-app/try-runtime",
    "parachain-bridge-app/try-runtime",
    "bridge-channel/try-runtime",
    "substrate-bridge-app/try-runtime",
    "substrate-bridge-channel/try-runtime",
    "bridge-types/try-runtime",
    "farming/try-runtime",
    "faucet/try-runtime",
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "iroha-migration/try-runtime",
    "kensetsu/try-runtime",
    "liquidity-proxy/try-runtime",
    "mock-liquidity-source/try-runtime",
    "multicollateral-bonding-curve-pool/try-runtime",
    "oracle-proxy/try-runtime",
    "order-book/try-runtime",
    "pallet-authorship/try-runtime",
    "pallet-babe/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-collective/try-runtime",
    "pallet-democracy/try-runtime",
    "pallet-elections-phragmen/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-identity/try-runtime",
    "pallet-im-online/try-runtime",
    "pallet-membership/try-runtime",
    "pallet-multisig/try-runtime",
    "pallet-offences/try-runtime",
    "pallet-preimage/try-runtime",
    "pallet-randomness-collective-flip/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-session/try-runtime",
    "pallet-staking/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-utility/try-runtime",
    "permissions/try-runtime",
    "pool-xyk/try-runtime",
    "price-tools/try-runtime",
    "pswap-distribution/try-runtime",
    "referrals/try-runtime",
    "rewards/try-runtime",
    "soratopia/try-runtime",
    "technical/try-runtime",
    "trading-pair/try-runtime",
    "vested-rewards/try-runtime",
    "xor-fee/try-runtime",
    "xst/try-runtime",
    "tokens/try-runtime",
    "currencies/try-runtime",
    "pallet-election-provider-multi-phase/try-runtime",
    "pallet-bags-list/try-runtime",
    "pallet-mmr/try-runtime",
    "pallet-beefy-mmr/try-runtime",
    "bridge-data-signer/try-runtime",
    "multisig-verifier/try-runtime",
    "qa-tools/try-runtime",
    "extended-assets/try-runtime",
]

test = ["framenode-chain-spec/test", "liquidity-proxy/test", "order-book/test"]
