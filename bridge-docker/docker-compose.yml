services:
  sora-alice:
    image: sora2/substrate:local
    container_name: bridge-sora-alice
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    ports:
      - "9944:9944"
      - "9954:9954"
    command: ["framenode", 
        "--pruning", "archive",
        "--enable-offchain-indexing", "true",
        "-d", "/data", 
        "--alice", 
        "--port", "10000", 
        "--ws-port", "9944",
        "--rpc-port", "9954", 
        "--unsafe-ws-external",
        "--unsafe-rpc-external",
        "--rpc-cors", "all",
        "--chain", "local", 
        "--execution", "wasm", 
        "--wasm-execution", "compiled"
      ]
    volumes:
      - sora-alice-data:/data
    
  sora-bob:
    image: sora2/substrate:local
    container_name: bridge-sora-bob
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    ports:
      - "9945:9945"
      - "9955:9955"
    command: ["framenode", 
        "--pruning", "archive",
        "--enable-offchain-indexing", "true",
        "-d", "/data", 
        "--bob", 
        "--port", "10001", 
        "--ws-port", "9945",
        "--rpc-port", "9955", 
        "--unsafe-ws-external",
        "--unsafe-rpc-external",
        "--rpc-cors", "all",
        "--chain", "local", 
        "--execution", "wasm", 
        "--wasm-execution", "compiled"
      ]
    volumes:
      - sora-bob-data:/data
    
  sora-charlie:
    image: sora2/substrate:local
    container_name: bridge-sora-charlie
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    ports: 
      - "9946:9946"
      - "9956:9956"
    command: ["framenode", 
        "--pruning", "archive",
        "--enable-offchain-indexing", "true",
        "-d", "/data", 
        "--charlie", 
        "--port", "10002", 
        "--ws-port", "9946",
        "--rpc-port", "9956", 
        "--unsafe-ws-external",
        "--unsafe-rpc-external",
        "--rpc-cors", "all",
        "--chain", "local", 
        "--execution", "wasm", 
        "--wasm-execution", "compiled"
      ]
    volumes:
      - sora-charlie-data:/data
    
  sora-dave:
    image: sora2/substrate:local
    container_name: bridge-sora-dave
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    ports:
      - "9947:9947"
      - "9957:9957"
    command: ["framenode", 
        "--pruning", "archive",
        "--enable-offchain-indexing", "true",
        "-d", "/data", 
        "--dave", 
        "--port", "10003", 
        "--ws-port", "9947",
        "--rpc-port", "9957", 
        "--unsafe-ws-external",
        "--unsafe-rpc-external",
        "--rpc-cors", "all",
        "--chain", "local", 
        "--execution", "wasm", 
        "--wasm-execution", "compiled"
      ]
    volumes:
      - sora-dave-data:/data
    
  sora-eve:
    image: sora2/substrate:local
    container_name: bridge-sora-eve
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    ports:
      - "9948:9948"
      - "9958:9958"
    command: ["framenode", 
        "--pruning", "archive",
        "--enable-offchain-indexing", "true",
        "-d", "/data", 
        "--eve", 
        "--port", "10004", 
        "--ws-port", "9948",
        "--rpc-port", "9958", 
        "--unsafe-ws-external",
        "--unsafe-rpc-external",
        "--rpc-cors", "all",
        "--chain", "local", 
        "--execution", "wasm", 
        "--wasm-execution", "compiled"
      ]
    volumes:
      - sora-eve-data:/data
    
  sora-ferdie:
    image: sora2/substrate:local
    container_name: bridge-sora-ferdie
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    ports:
      - "9949:9949"
      - "9959:9959"
    command: ["framenode", 
        "--pruning", "archive",
        "--enable-offchain-indexing", "true",
        "-d", "/data", 
        "--ferdie", 
        "--port", "10005", 
        "--ws-port", "9949",
        "--rpc-port", "9959", 
        "--unsafe-ws-external",
        "--unsafe-rpc-external",
        "--rpc-cors", "all",
        "--chain", "local", 
        "--execution", "wasm", 
        "--wasm-execution", "compiled"
      ]
    volumes:
      - sora-ferdie-data:/data
    
  geth:
    image: geth:local
    container_name: bridge-geth
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile.geth
    healthcheck:
      test: "geth attach --exec eth.blockNumber ws://localhost:8545 || exit 1"
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    entrypoint: sh
    command: /configs/run_geth.sh
    ports:
      - 8545:8545
    volumes:
      - geth-data:/data


  hardhat:
    image: hardhat:local
    build: 
      context: ..
      dockerfile: bridge-docker/Dockerfile.hardhat
    container_name: bridge-hardhat
    entrypoint: sh
    command: docker-deploy.sh
    depends_on: 
      geth:
        condition: service_healthy
    volumes:
      - hardhat-data:/data

  register-bridge:
    image: sora2/substrate:local
    container_name: bridge-register-bridge
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    environment:
      - RUST_LOG=info,relayer=debug
    depends_on:
      hardhat:
        condition: service_started
    entrypoint: sh
    command: /register-bridge/register-bridge.sh
    volumes:
      - hardhat-data:/data

  relay-substrate:
    image: sora2/substrate:local
    container_name: bridge-relay-substrate
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    environment:
      - RUST_LOG=info,relayer=debug
    depends_on:
      register-bridge:
        condition: service_completed_successfully
    command: ["relayer",
        "--ethereum-url", "ws://bridge-geth:8545",
        "--substrate-url", "ws://bridge-sora-alice:9944",
        "--ethereum-key", "3b61c8157aea9aba36248468af274cac4163b0b58c63eb66a8d2bbf219906c62",
        "bridge", "relay", "substrate",
      ]

  relay-ethereum:
    image: sora2/substrate:local
    container_name: bridge-relay-ethereum
    restart: always
    build:
      context: ..
      dockerfile: bridge-docker/Dockerfile.sora
    environment:
      - RUST_LOG=info,relayer=debug
    depends_on:
      register-bridge:
        condition: service_completed_successfully
    command: ["relayer",
        "--ethereum-url", "ws://bridge-geth:8545",
        "--substrate-url", "ws://bridge-sora-alice:9944",
        "--substrate-key", "//Bob",
        "bridge", "relay", "ethereum",
        "--base-path", "/data"
      ]
    volumes:
      - relay-ethereum-data:/data

  redis:
    image: 'redis:alpine'
    container_name: bridge-redis
    restart: always
    ports:
      - 6379:6379
    command: redis-server
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:14
    container_name: bridge-postgres
    restart: always
    command: postgres -c 'max_connections=250'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
  
  pgweb:
    restart: always  
    image: sosedoff/pgweb
    container_name: bridge-pgweb
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@bridge-postgres:5432/postgres?sslmode=disable
    depends_on:
      - postgres

  blockscout:
    depends_on:
      postgres:
        condition: service_started
      smart-contract-verifier:
        condition: service_started
      redis:
        condition: service_started
      geth:
        condition: service_healthy
    image: blockscout/blockscout:${DOCKER_TAG:-latest}
    container_name: bridge-blockscout
    restart: always
    command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    env_file:
      -  ./envs/common-blockscout.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        BLOCK_TRANSFORMER: 'base'
        ETHEREUM_JSONRPC_HTTP_URL: http://bridge-geth:8545/
        DATABASE_URL: postgresql://postgres:@bridge-postgres:5432/postgres?ssl=false
        ECTO_USE_SSL: 'false'
        SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
    ports:
      - 4000:4000

  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    container_name: bridge-verifier
    restart: always
    env_file:
      -  ./envs/common-smart-contract-verifier.env
    ports:
      - 8043:8043
volumes:
  postgres-data: null
  redis-data: null
  geth-data: null
  sora-alice-data: null
  sora-bob-data: null
  sora-charlie-data: null
  sora-dave-data: null
  sora-eve-data: null
  sora-ferdie-data: null
  hardhat-data: null
  relay-ethereum-data: null