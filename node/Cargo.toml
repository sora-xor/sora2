[package]
name = "framenode"
version = "3.6.1"
authors = ["Parity Technologies <admin@parity.io>"]
build = "build.rs"
edition = "2021"

[[bin]]
name = "framenode"
path = "src/main.rs"

[dependencies]
futures-timer = { workspace = true }
futures = "0.3"
log = { workspace = true }
codec = { package = "parity-scale-codec", version = "3", features = [
    "derive",
    "chain-error",
] }
clap = { workspace = true, features = ["derive"] }
clap_lex = { workspace = true }
ansi_term = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
jsonrpsee = { workspace = true, features = ["server"] }
# bridge-multisig = { git = "https://github.com/soramitsu/sora2-frame-pallets.git", branch = "polkadot-v1.1.0", package = "pallet-multisig" }
secp256k1 = { workspace = true, features = ["hmac"], package = "libsecp256k1" }

framenode-chain-spec = { path = "chain_spec" }
common = { path = "../common" }
dex-api-rpc = { path = "../pallets/dex-api/rpc" }
dex-manager-rpc = { path = "../pallets/dex-manager/rpc" }
rewards-rpc = { path = "../pallets/rewards/rpc" }
iroha-migration-rpc = { path = "../pallets/iroha-migration/rpc" }
trading-pair-rpc = { path = "../pallets/trading-pair/rpc" }
assets-rpc = { path = "../pallets/assets/rpc" }
liquidity-proxy-rpc = { path = "../pallets/liquidity-proxy/rpc" }
eth-bridge-rpc = { path = "../pallets/eth-bridge/rpc" }
farming-rpc = { path = "../pallets/farming/rpc" }
pswap-distribution-rpc = { path = "../pallets/pswap-distribution/rpc" }
vested-rewards-rpc = { path = "../pallets/vested-rewards/rpc" }
beefy-light-client = { workspace = true, optional = true }
beefy-light-client-rpc = { workspace = true, optional = true }
oracle-proxy-rpc = { path = "../pallets/oracle-proxy/rpc" }

bridge-multisig = { workspace = true, default-features = false }

# Parachain dependencies
framenode-runtime = { path = "../runtime" }

# Substrate dependencies

bridge-proxy-rpc = { path = "../pallets/bridge-proxy/rpc" }
sp-runtime = { workspace = true }
sp-arithmetic = { workspace = true }
sp-io = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-consensus = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-babe = { workspace = true }
sp-consensus-babe = { workspace = true }
sc-consensus-beefy = { workspace = true }
sc-consensus-aura = { workspace = true }
sp-consensus-aura = { workspace = true }
sc-consensus-grandpa = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-client-db = { workspace = true }
sc-executor = { workspace = true }
sc-service = { workspace = true }
sc-keystore = { workspace = true }
try-runtime-cli = { workspace = true, optional = true }
sp-transaction-pool = { workspace = true }
telemetry = { workspace = true }
sc-network = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sp-timestamp = { workspace = true }
sp-trie = { workspace = true }
# sc-finality-grandpa = { workspace = true }
# sp-finality-grandpa = { workspace = true }
sc-informant = { workspace = true }
sc-offchain = { workspace = true }
sc-chain-spec = { workspace = true }
sp-transaction-storage-proof = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true, optional = true }
substrate-frame-rpc-system = { workspace = true }
sp-beefy = { workspace = true }
# beefy-gadget = { workspace = true }
sp-mmr-primitives = { workspace = true }
prometheus-endpoint = { workspace = true }
sc-consensus-beefy-rpc = { workspace = true }
mmr-rpc = { workspace = true }
mmr-gadget = { workspace = true }
leaf-provider-rpc = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
frame-remote-externalities = { workspace = true }
enum-as-inner = { workspace = true }
sc-consensus-babe-rpc = { workspace = true }
sc-consensus-epochs = { workspace = true }
sp-keystore = { workspace = true }
sp-statement-store = { workspace = true }

# TODO remove after toolchain is updated
# newer versions of librirary requires newer toolchain, current is `nightly-2023-03-21`
ahash = { workspace = true }
bumpalo = { workspace = true }
cargo-platform = { workspace = true }
substrate-bip39 = { workspace = true }
schnellru = { workspace = true }
bstr = { workspace = true }
predicates-tree = { workspace = true }
predicates-core = { workspace = true }
predicates = { workspace = true }

[build-dependencies]
substrate-build-script-utils = "3"

[dev-dependencies]
# TODO remove after toolchain is updated
# newer versions of librirary requires newer toolchain, current is `nightly-2023-03-21`
assert_cmd = { workspace = true }
tokio = { workspace = true, features = ["macros"] }

# Substrate dependencies
pallet-sudo = { workspace = true }

framenode-chain-spec = { path = "chain_spec", features = ["test"] }

[features]
include-real-files = []

main-net-coded = []

private-net = [
    "framenode-chain-spec/private-net",
    "framenode-runtime/private-net",
]

wip = [
    "framenode-chain-spec/wip",
    "framenode-runtime/wip",
    "beefy-light-client",
    "beefy-light-client-rpc",
]

stage = ["framenode-chain-spec/stage", "framenode-runtime/stage"]

runtime-benchmarks = [
    "frame-benchmarking-cli",
    "framenode-runtime/runtime-benchmarks",
    "sc-client-db/runtime-benchmarks",
    "sc-service/runtime-benchmarks",
]

try-runtime = [
    "try-runtime-cli",
    "try-runtime-cli/try-runtime",
    "framenode-runtime/try-runtime",
]
